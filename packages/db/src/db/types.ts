import type { ColumnType } from "kysely";
export type Generated<T> = T extends ColumnType<infer S, infer I, infer U>
  ? ColumnType<S, I | undefined, U>
  : ColumnType<T, T | undefined, T>;
export type Timestamp = ColumnType<Date, Date | string, Date | string>;

import type { AUDIT_STATUS, EVENT_TYPE, NOTIFICATION_USER_TYPE, JOB_STATUS, ASSESSMENT_QUESTION_STATUS, LOCATION_TYPE, REPORT_STATUS, ASSIGNMENT_STATUS, QUESTION_APPROVAL_STATUS, QUESTION_TOPIC_TYPE, REPORTING_PERIOD_TYPE, REPORTING_FREQUENCY, ESG } from "./enums";

export type address = {
    id: string;
    address_line_1: string;
    address_line_2: string | null;
    pincode: string;
    address_type_id: string | null;
    countryId: string | null;
};
export type address_type = {
    id: string;
    type: string;
};
export type admin_steam_company_mapping = {
    id: string;
    authUserId: string;
    companyId: string;
};
export type answer_layout = {
    id: string;
    sequence: number;
    category: string;
    title: string | null;
    is_delegatable: Generated<boolean>;
    followup_question: Generated<boolean>;
    depends_on_data_point_id: string | null;
    depends_on_data_point_option_id: string | null;
    question_id: number | null;
    is_monthly_allowed: Generated<boolean>;
    no_data_collection_years: Generated<number>;
};
export type answer_layout_column = {
    id: string;
    answer_layout_id: string;
    title: string;
    description: string | null;
    category: string;
    sequence: number;
};
export type answer_layout_energy_consumption_energy_source_sequence_mapping = {
    answer_layout_id: string;
    energy_source_id: number;
};
export type answer_layout_fugitive_emission_emission_types_sequence_mapping = {
    answer_layout_id: string;
    emission_type_id: number;
};
export type answer_layout_mobile_consumption_transportation_mode_sequence_m = {
    answer_layout_id: string;
    transportation_mode_id: number;
};
export type answer_layout_process_emission_emission_types_sequence_mapping = {
    answer_layout_id: string;
    emission_type_id: number;
};
export type answer_layout_row = {
    id: string;
    answer_layout_id: string;
    title: string;
    description: string | null;
    category: string;
    sequence: number;
};
export type answer_layout_row_column_data_point_mapping = {
    id: string;
    data_point_id: string;
    answer_layout_row_id: string | null;
    answer_layout_column_id: string | null;
    depends_on_data_point_id: string | null;
    depends_on_data_point_option_id: string | null;
    is_same_data_point_for_entire_column: Generated<boolean | null>;
    editable: Generated<boolean>;
    formula: string | null;
    unit_formula: string | null;
};
export type answer_layout_stationary_combustion_fuel_sequence_mapping = {
    answer_layout_id: string;
    fuel_id: number;
};
export type assesment_comment = {
    id: string;
    supplier_asssessment_id: string;
    question_id: number;
};
export type assessment = {
    id: string;
    assessment_master_id: string;
    data_start_date: Timestamp;
    data_end_date: Timestamp;
    audit_date: Timestamp;
    busniess_criticality: string[];
    data_due_date: Timestamp | null;
    rp_code: string | null;
};
export type assessment_master = {
    id: string;
    customer_id: string;
    material_topic_id: string;
    data_start_date: Timestamp;
    data_end_date: Timestamp;
    audit_date: Timestamp;
    is_active: Generated<boolean>;
    created_by_id: string;
    created_at: Generated<Timestamp>;
    last_updated_by_id: string;
    last_updated_at: Generated<Timestamp>;
    is_recurring: Generated<boolean>;
    busniess_criticality: string[];
    customer_auditor_id: string;
    data_due_date: Timestamp | null;
    rp_code: string | null;
};
export type assessment_master_question_mapping = {
    id: Generated<number>;
    assessment_master_id: string;
    question_id: number;
    is_deleted: Generated<boolean>;
};
export type assessment_master_supplier_category_mapping = {
    id: string;
    assessment_master_id: string;
    supplier_category_id: string;
    is_deleted: Generated<boolean>;
};
export type assessment_supplier_audit = {
    id: string;
    assessment_id: string;
    supplier_company_id: string;
    customer_auditor_id: string;
    audit_status: Generated<AUDIT_STATUS>;
    created_at: Generated<Timestamp>;
    updated_at: Timestamp;
    created_by_id: string;
    last_updated_by_id: string;
    supplier_asssessment_mapping_id: string;
    audit_completed_date: Timestamp | null;
    audit_rejected_date: Timestamp | null;
};
export type assessment_supplier_category_mapping = {
    id: string;
    assessment_id: string;
    supplier_category_id: string;
    is_deleted: Generated<boolean>;
};
export type AuthKey = {
    id: string;
    hashed_password: string | null;
    user_id: string;
};
export type AuthSession = {
    id: string;
    userId: string;
    expiresAt: Timestamp;
};
export type AuthUser = {
    id: string;
    name: string | null;
    first_name: string | null;
    middle_name: string | null;
    last_name: string | null;
    designation: string | null;
    phone_number: string;
    email: string;
    email_verified: Timestamp | null;
    profile_image_url: string;
    is_onboarding_complete: Generated<boolean | null>;
    is_active: Generated<boolean | null>;
    is_deleted: Generated<boolean | null>;
    company_id: string | null;
    created_by_id: string | null;
    created_at: Generated<Timestamp>;
    last_updated_at: Timestamp;
    phone_country_code_id: string | null;
    forgotPasswordExpiry: Timestamp | null;
    forgotPasswordToken: string | null;
    roles: string[];
    onboarding_completed_date: Timestamp | null;
    last_logged_at: Timestamp | null;
    number_format: Generated<boolean | null>;
    hashed_password: string | null;
};
export type bu_user_mapping = {
    id: string;
    bu_id: string;
    user_id: string;
    user_type: string;
    is_deleted: Generated<boolean | null>;
};
export type business_unit = {
    id: string;
    parent_bu_id: string | null;
    bu_name: string;
    bu_description: string | null;
    location_id: string;
    company_id: string;
    is_deleted: Generated<boolean | null>;
};
export type calendar_month = {
    id: Generated<number>;
    month_numeric: number;
    month_short_name: string;
    month_full_name: string;
};
export type comment = {
    id: string;
    assesment_comments_id: string;
    created_by_id: string;
    created_at: Generated<Timestamp>;
    comment_text: string;
    rp_code: string | null;
};
export type company = {
    id: string;
    company_name: string;
    year_of_incorporation: Timestamp | null;
    identification_number: string | null;
    industry_id: string | null;
    country_id: string;
    profile_image_url: string | null;
    website: string | null;
    full_address: string | null;
    partner: Generated<string | null>;
};
export type country = {
    id: string;
    country_name: string;
    country_name_abbr: string;
    country_name_full: string;
    country_code_alpha_3: string;
    id_type: string | null;
    currency_id: string | null;
    default_country_codeId: string | null;
};
export type currency = {
    id: string;
    currency_name: string;
    currency_symbol: string;
};
export type customer_auditor = {
    id: string;
    customer_id: string;
    auditor_id: string;
    is_deleted: Generated<boolean>;
    created_at: Generated<Timestamp>;
    created_by_id: string;
    last_updated_at: Generated<Timestamp>;
    last_updated_by_id: string;
};
export type customer_company = {
    id: string;
    company_id: string;
    is_active: Generated<boolean>;
    supplier_asssessment_frequency: Generated<string>;
    preferred_currency: string;
    date_format_id: string | null;
    time_format_id: string | null;
    created_date: Generated<Timestamp>;
    created_by_id: string;
    last_updated_at: Timestamp;
    last_updated_by_id: string;
    financial_year_cycle: string | null;
    number_format: Generated<boolean | null>;
    automated_email_reminder_for_supplier: Generated<boolean | null>;
    automated_email_reminder_for_collaborator: Generated<boolean | null>;
};
export type customer_material_topic = {
    id: string;
    customer_id: string;
    material_topicId: string;
    is_active: Generated<boolean>;
    weightage: Generated<number>;
};
export type customer_supplier = {
    id: string;
    customer_id: string;
    supplier_company_id: string;
    business_criticality: string;
    spoc_id: string;
    is_active: Generated<boolean>;
    is_deleted: Generated<boolean>;
    last_updated_at: Generated<Timestamp>;
    annual_spend: string | null;
};
export type customer_supplier_category_mapping = {
    id: string;
    customer_supplier_id: string;
    supplier_category_id: string;
    effective_start_date: Timestamp;
    effective_end_date: Timestamp;
    is_deleted: Generated<boolean>;
};
export type customer_supplier_setting = {
    id: string;
    customer_supplier_id: string;
    start_date: Timestamp;
    end_date: Timestamp;
    customer_annual_spend: string;
    supply_percentage: number;
    rp_code: string | null;
};
export type data_hub = {
    id: string;
    data_point_id: string;
    response: string | null;
    bu_id: string;
    start_date: Timestamp;
    end_date: Timestamp;
    created_at: Generated<Timestamp>;
    last_updated_at: Timestamp;
    created_by_id: string;
    last_updated_by_id: string;
    audit_status: AUDIT_STATUS;
    is_submitted: Generated<boolean>;
    submittedAt: Timestamp | null;
    sequence: Generated<number>;
    rp_code: string | null;
    is_data_available: Generated<boolean>;
    last_completed_in_question_id: number | null;
};
export type data_point = {
    id: string;
    category: string;
    title: string;
    description: string | null;
    data_point_ref_id: string;
    is_unit: Generated<boolean>;
    measurement_basis_id: number | null;
    prev_fy_diff: Generated<number>;
    prev_fy_data_point_id: string | null;
    unit_data_point_id: string | null;
};
export type data_point_measurement_basis_mapping = {
    id: string;
    data_point_id: string;
    measurement_basis_id: number;
};
export type data_point_option = {
    id: string;
    label: string;
    value: string;
    type: string;
};
export type data_point_option_mapping = {
    id: string;
    data_point_id: string;
    data_point_option_id: string;
    sequence: Generated<number>;
};
export type date_time_format = {
    id: string;
    format: string;
    type: string;
};
export type emission_energy_fuel_source_aggregate = {
    id: string;
    company_id: string;
    esg_indicator_id: number;
    fuel_id: number;
    emissions_co2e_total: number;
    energy_kj_total: number;
    start_date: Timestamp;
    end_date: Timestamp;
    created_at: Generated<Timestamp>;
    last_updated_at: Timestamp;
    rp_code: string | null;
};
export type emission_energy_supplier_category_aggregate = {
    id: string;
    company_id: string;
    supplier_category_id: string;
    emissions_co2e_total: number;
    energy_kj_total: number;
    start_date: Timestamp;
    end_date: Timestamp;
    created_at: Generated<Timestamp>;
    last_updated_at: Timestamp;
    rp_code: string | null;
};
export type emission_types = {
    id: Generated<number>;
    emission_gas: string;
    measurement_basis_id: number;
    gwp: number | null;
    emission_type: string;
    is_process_emission: Generated<boolean>;
    is_fugitive_emission: Generated<boolean>;
};
export type energy_consumption = {
    id: string;
    company_id: string;
    input_consumption: number | null;
    input_unit_id: number | null;
    input_start_date: Timestamp;
    input_end_date: Timestamp;
    energy_source_id: number;
    is_submitted: Generated<boolean>;
    created_at: Generated<Timestamp>;
    created_by_id: string;
    is_first_audit_complete: Generated<boolean>;
    last_updated_at: Timestamp;
    last_updated_by_id: string;
    is_data_available: Generated<boolean>;
    bu_id: string;
    rp_code: string | null;
};
export type energy_consumption_audit = {
    id: string;
    energy_consumption_id: string;
    customer_auditor_id: string;
    audit_status: Generated<AUDIT_STATUS>;
    audit_completion_date: Timestamp | null;
};
export type energy_emission_factor = {
    id: Generated<number>;
    energy_source_id: number;
    emission_factor: number;
    emission_gas: string;
    location_id: string | null;
};
export type energy_source = {
    id: Generated<number>;
    source_name: string;
    is_renewable_energy_type: boolean;
    measurement_basis_id: number;
};
export type esg_aggregated_indicator = {
    id: string;
    company_id: string;
    esg_indicator_id: number;
    esg_indicator_total: number;
    start_date: Timestamp;
    end_date: Timestamp;
    created_at: Generated<Timestamp>;
    last_updated_at: Timestamp;
    rp_code: string | null;
};
export type esg_indicator_list = {
    id: Generated<number>;
    esg_indicator_name: string;
};
export type event_notification = {
    id: string;
    event_type: EVENT_TYPE;
    event_notification_data: unknown;
    event_date: Timestamp;
    created_at: Generated<Timestamp>;
};
export type event_user_mapping = {
    id: string;
    user_id: string | null;
    company_id: string | null;
    event_notification_id: string;
    notification_user_type: NOTIFICATION_USER_TYPE;
};
export type financial_year_cycle = {
    id: Generated<number>;
    fy_short_name: string;
    fy_full_name: string;
};
export type fuel = {
    id: Generated<number>;
    measurement_basis_id: number;
    calorific_value: number;
    calorific_value_unit: string;
    fuel_name: string;
    density: number | null;
    density_factor_unit: string | null;
    is_stationary_combustion: Generated<boolean>;
    is_renewable_fuel_type: Generated<boolean>;
};
export type fugitive_emission = {
    id: string;
    company_id: string;
    input_emission: number | null;
    input_unit_id: number | null;
    input_start_date: Timestamp;
    input_end_date: Timestamp;
    emission_type_id: number;
    is_submitted: Generated<boolean>;
    created_at: Generated<Timestamp>;
    created_by_id: string;
    is_first_audit_complete: Generated<boolean>;
    last_updated_at: Timestamp;
    last_updated_by_id: string;
    is_data_available: Generated<boolean>;
    bu_id: string;
    rp_code: string | null;
};
export type fugitive_emission_audit = {
    id: string;
    fugitive_emission_id: string;
    customer_auditor_id: string;
    audit_status: Generated<AUDIT_STATUS>;
    audit_completion_date: Timestamp | null;
};
export type industry = {
    id: string;
    industry_name: string;
    description: string | null;
};
export type industry_material_topic = {
    id: string;
    industry_id: string;
    material_topic_id: string;
};
export type job_details = {
    id: Generated<number>;
    job_name: string;
    description: string | null;
};
export type job_execution_log = {
    id: string;
    job_id: number;
    job_started_at: Generated<Timestamp>;
    job_completed_at: Timestamp | null;
    job_status: JOB_STATUS | null;
};
export type location = {
    id: string;
    parent_location_id: string | null;
    location_name: string;
    country_id: string | null;
    location_type: LOCATION_TYPE;
};
export type material_topic = {
    id: string;
    material_topic: string;
    material_topic_description: string | null;
    reporting_framework_id: string | null;
    is_active: Generated<boolean>;
    sequence: Generated<number>;
    esg: ESG | null;
};
export type material_topic_es_indicator_list_mapping = {
    material_topic_id: string;
    esg_indicator_list_id: number;
};
export type measurement_basis = {
    id: Generated<number>;
    measurement_basis_name: string;
};
export type measurement_conversion = {
    id: Generated<number>;
    conversion_type: string;
    measurement_basis_id: number;
    from_unit_id: number;
    to_unit_id: number;
    factor: number;
};
export type measurement_unit = {
    id: Generated<number>;
    measurement_unit_name: string;
    symbol: string;
    is_preferred_conversion_unit: Generated<boolean>;
    is_main_conversion_unit: Generated<boolean>;
    measurement_basis_id: number;
};
export type mobile_consumption = {
    id: string;
    company_id: string;
    input_consumption: number | null;
    input_unit_id: number | null;
    input_start_date: Timestamp;
    input_end_date: Timestamp;
    fuel_id: number;
    transportation_mode_id: number;
    is_submitted: Generated<boolean>;
    created_at: Generated<Timestamp>;
    created_by_id: string;
    is_first_audit_complete: Generated<boolean>;
    last_updated_at: Timestamp;
    last_updated_by_id: string;
    is_data_available: Generated<boolean>;
    bu_id: string;
    rp_code: string | null;
};
export type mobile_consumption_audit = {
    id: string;
    mobile_consumption_id: string;
    customer_auditor_id: string;
    audit_status: Generated<AUDIT_STATUS>;
    audit_completion_date: Timestamp | null;
};
export type phone_country_code = {
    id: string;
    country_code: number;
};
export type process_emission = {
    id: string;
    company_id: string;
    input_emission: number | null;
    input_unit_id: number | null;
    input_start_date: Timestamp;
    input_end_date: Timestamp;
    emission_type_id: number;
    is_submitted: Generated<boolean>;
    created_at: Generated<Timestamp>;
    created_by_id: string;
    is_first_audit_complete: Generated<boolean>;
    last_updated_at: Timestamp;
    last_updated_by_id: string;
    is_data_available: Generated<boolean>;
    bu_id: string;
    rp_code: string | null;
};
export type process_emission_audit = {
    id: string;
    process_emission_id: string;
    customer_auditor_id: string;
    audit_status: Generated<AUDIT_STATUS>;
    audit_completion_date: Timestamp | null;
};
export type questions = {
    id: Generated<number>;
    question_ref_id: string;
    title: string;
    description: string;
    format: string;
    sequence: number;
    material_topic_id: string;
    is_active: Generated<boolean>;
    is_supply_chain: Generated<boolean>;
    is_internal: Generated<boolean>;
    question_topic_type: Generated<QUESTION_TOPIC_TYPE>;
};
export type report = {
    id: string;
    name: string;
    data_start_date: Timestamp;
    data_end_date: Timestamp;
    data_due_date: Timestamp;
    audit_due_date: Timestamp;
    bu_id: string;
    customer_auditor_id: string;
    reporting_framework_id: string | null;
    reporting_sub_framework_id: string | null;
    created_at: Generated<Timestamp>;
    created_by_id: string;
    updated_at: Timestamp;
    status: Generated<REPORT_STATUS>;
    ry_code: string | null;
};
export type report_comment = {
    id: string;
    created_by_id: string;
    created_at: Generated<Timestamp>;
    comment_text: string;
    report_question_comment_mapping_id: string;
    rp_code: string | null;
};
export type report_material_topic = {
    id: string;
    material_topic_id: string;
    report_id: string;
};
export type report_question = {
    id: string;
    report_material_topic_id: string;
    question_id: number;
    audit_status: Generated<AUDIT_STATUS>;
    audit_completion_date: Timestamp | null;
    submitted: Generated<boolean>;
    submittedAt: Timestamp | null;
    question_status: Generated<ASSESSMENT_QUESTION_STATUS>;
    notes: string | null;
    is_data_available: Generated<boolean>;
    is_edit_locked: Generated<boolean>;
    assignment_status: Generated<ASSIGNMENT_STATUS>;
    reporting_frequency: Generated<REPORTING_FREQUENCY>;
};
export type report_question_business_unit_mapping = {
    id: string;
    report_question_id: string;
    bu_id: string;
    question_status: Generated<ASSESSMENT_QUESTION_STATUS>;
    approval_status: Generated<QUESTION_APPROVAL_STATUS>;
    assignment_status: Generated<ASSIGNMENT_STATUS>;
    acceptedAt: Timestamp | null;
    rejectedAt: Timestamp | null;
    is_data_available: Generated<boolean>;
};
export type report_question_comment_mapping = {
    id: string;
    report_question_id: string;
};
export type report_question_frequency_mapping = {
    id: string;
    report_question_id: string;
    bu_id: string | null;
    question_status: Generated<ASSESSMENT_QUESTION_STATUS>;
    is_data_available: Generated<boolean>;
    rp_code: string | null;
    approval_status: Generated<QUESTION_APPROVAL_STATUS>;
};
export type report_question_user_mapping = {
    id: string;
    report_question_bu_id: string;
    user_id: string;
    role: string;
    is_edit_locked: Generated<boolean>;
};
export type reporting_framework = {
    id: string;
    name: string;
    description: string | null;
    sequence: number;
    is_active: Generated<boolean>;
    created_at: Generated<Timestamp>;
};
export type reporting_framework_section = {
    id: string;
    reporting_framework_id: string;
    name: string;
    description: string | null;
    sequence: number;
    is_active: Generated<boolean>;
};
export type reporting_framework_section_question_mapping = {
    id: string;
    reporting_framework_section_id: string;
    question_id: number;
    is_active: Generated<boolean>;
};
export type reporting_period = {
    id: Generated<number>;
    rp_code: string;
    start_date: Timestamp;
    end_date: Timestamp;
    type: REPORTING_PERIOD_TYPE;
};
export type reporting_sub_framework = {
    id: string;
    name: string;
    description: string | null;
    parent_reporting_framework_id: string;
    is_active: Generated<boolean>;
};
export type reporting_year = {
    id: Generated<number>;
    ry_code: string;
    ry_short_name: string;
    ry_full_name: string;
    rp_code: string;
    financial_year_cycle_id: number;
};
export type reporting_year_month = {
    id: Generated<number>;
    ry_code: string;
    rp_code: string;
    month_id: number;
    year: number;
    sequence: number;
};
export type seed_data_log = {
    id: Generated<number>;
    name: string;
    started_at: Generated<Timestamp>;
    finished_at: Generated<Timestamp>;
    status: string;
    message: string | null;
};
export type staionary_combustion_consumption = {
    id: string;
    company_id: string;
    input_consumption: number | null;
    input_unit_id: number | null;
    input_start_date: Timestamp;
    input_end_date: Timestamp;
    fuel_id: number;
    is_submitted: Generated<boolean>;
    created_at: Generated<Timestamp>;
    created_by_id: string;
    is_first_audit_complete: Generated<boolean>;
    last_updated_by_id: string;
    updated_at: Timestamp;
    is_data_available: Generated<boolean>;
    bu_id: string;
    rp_code: string | null;
};
export type staionary_combustion_consumption_audit = {
    id: string;
    staionary_combustion_consumption_id: string;
    customer_auditor_id: string;
    audit_status: Generated<AUDIT_STATUS>;
    audit_completion_date: Timestamp | null;
};
export type stationary_combustion_emission_factor = {
    id: Generated<number>;
    fuel_id: number;
    emission_factor: number;
    emission_factor_basis: string;
    emission_gas: string;
    location_id: string | null;
};
export type supp_material_topic_esg_indicator_list_mapping = {
    material_topic_id: string;
    esg_indicator_list_id: number;
};
export type supplier_asssessment = {
    id: string;
    supplier_company_id: string;
    assessment_id: string;
    questions_id: number;
    supplier_asssessment_mapping_id: string;
    is_data_available: Generated<boolean | null>;
    audit_completed_date: Timestamp | null;
    audit_status: Generated<AUDIT_STATUS>;
    notes: string | null;
    is_submitted: Generated<boolean>;
    submittedAt: Timestamp | null;
    question_status: Generated<ASSESSMENT_QUESTION_STATUS>;
};
export type supplier_asssessment_mapping = {
    id: string;
    supplier_company_id: string;
    assessment_id: string;
    is_submitted: Generated<boolean>;
    assessment_supplier_category_mapping_id: string;
    submittedAt: Timestamp | null;
    created_at: Generated<Timestamp>;
};
export type supplier_category = {
    id: string;
    category_name: string;
    description: string | null;
};
export type supplier_company = {
    id: string;
    company_id: string;
    is_active: Generated<boolean>;
    is_deleted: Generated<boolean>;
};
export type supporting_evidence = {
    id: string;
    supplier_asssessment_id: string | null;
    report_question_id: string | null;
    link: string;
    question_id: number;
    name: string;
    created_at: Generated<Timestamp>;
    created_by_id: string;
    rp_code: string | null;
    bu_id: string | null;
};
export type transportation_fuel_type = {
    id: Generated<number>;
    fuel_id: number;
    transportation_mode_id: number;
};
export type transportation_mode = {
    id: Generated<number>;
    transportation_mode_name: string;
};
export type v_energy_emission_scope2 = {
    id: string;
    company_id: string | null;
    bu_id: string | null;
    bu_name: string | null;
    energy_source_id: number | null;
    source_name: string | null;
    input_start_date: Timestamp | null;
    input_end_date: Timestamp | null;
    measurement_basis_name: string | null;
    emission_factor_location_id: string | null;
    emission_factor_location_name: string | null;
    emission_factor_co2: number | null;
    input_consumption: number | null;
    input_unit: string | null;
    consumption_converted_to_preferred_unit: number | null;
    converted_preferred_unit: string | null;
    consumption_kwh: number | null;
    emissions_co2e_tn: number | null;
};
export type v_energy_emission_scope2_without_submit = {
    id: string;
    company_id: string | null;
    bu_id: string | null;
    bu_name: string | null;
    energy_source_id: number | null;
    source_name: string | null;
    input_start_date: Timestamp | null;
    input_end_date: Timestamp | null;
    measurement_basis_name: string | null;
    emission_factor_location_id: string | null;
    emission_factor_location_name: string | null;
    emission_factor_co2: number | null;
    input_consumption: number | null;
    input_unit: string | null;
    consumption_converted_to_preferred_unit: number | null;
    converted_preferred_unit: string | null;
    consumption_kwh: number | null;
    emissions_co2e_tn: number | null;
};
export type v_fugitive_emission = {
    id: string;
    company_id: string | null;
    emission_type_id: number | null;
    emission_gas: string | null;
    input_emission: number | null;
    input_unit: string | null;
    input_unit_id: number | null;
    input_start_date: Timestamp | null;
    input_end_date: Timestamp | null;
    bu_id: string | null;
    emission_kg: number | null;
    emission_tn: number | null;
    gwp: number | null;
    emission_co2e_kg: number | null;
    emission_co2e_tn: number | null;
};
export type v_fugitive_emission_without_submit = {
    id: string;
    company_id: string | null;
    emission_type_id: number | null;
    emission_gas: string | null;
    input_emission: number | null;
    input_unit: string | null;
    input_unit_id: number | null;
    input_start_date: Timestamp | null;
    input_end_date: Timestamp | null;
    bu_id: string | null;
    emission_kg: number | null;
    emission_tn: number | null;
    gwp: number | null;
    emission_co2e_kg: number | null;
    emission_co2e_tn: number | null;
};
export type v_mobile_consumption_energy_emission = {
    id: string;
    company_id: string | null;
    bu_id: string | null;
    bu_name: string | null;
    fuel_id: number | null;
    fuel_name: string | null;
    transportation_mode_id: number | null;
    transportation_mode_name: string | null;
    input_start_date: Timestamp | null;
    input_end_date: Timestamp | null;
    measurement_basis_name: string | null;
    fuel_density: number | null;
    fuel_calorific_value: number | null;
    emission_factor_location_id: string | null;
    emission_factor_location_name: string | null;
    emission_factor_co2: number | null;
    input_consumption: number | null;
    input_unit: string | null;
    consumption_converted_to_preferred_unit: number | null;
    converted_preferred_unit: string | null;
    consumption_kg: number | null;
    energy_consumption_kj: number | null;
    emissions_co2e_kg: number | null;
    emissions_co2e_tn: number | null;
};
export type v_mobile_consumption_energy_emission_without_submit = {
    id: string;
    company_id: string | null;
    bu_id: string | null;
    bu_name: string | null;
    fuel_id: number | null;
    fuel_name: string | null;
    transportation_mode_id: number | null;
    transportation_mode_name: string | null;
    input_start_date: Timestamp | null;
    input_end_date: Timestamp | null;
    measurement_basis_name: string | null;
    fuel_density: number | null;
    fuel_calorific_value: number | null;
    emission_factor_location_id: string | null;
    emission_factor_location_name: string | null;
    emission_factor_co2: number | null;
    input_consumption: number | null;
    input_unit: string | null;
    consumption_converted_to_preferred_unit: number | null;
    converted_preferred_unit: string | null;
    consumption_kg: number | null;
    energy_consumption_kj: number | null;
    emissions_co2e_kg: number | null;
    emissions_co2e_tn: number | null;
};
export type v_process_emission = {
    id: string;
    company_id: string | null;
    emission_type_id: number | null;
    emission_gas: string | null;
    input_emission: number | null;
    input_unit: string | null;
    input_unit_id: number | null;
    input_start_date: Timestamp | null;
    input_end_date: Timestamp | null;
    bu_id: string | null;
    emission_kg: number | null;
    emission_tn: number | null;
    gwp: number | null;
    emission_co2e_kg: number | null;
    emission_co2e_tn: number | null;
};
export type v_process_emission_without_submit = {
    id: string;
    company_id: string | null;
    emission_type_id: number | null;
    emission_gas: string | null;
    input_emission: number | null;
    input_unit: string | null;
    input_unit_id: number | null;
    input_start_date: Timestamp | null;
    input_end_date: Timestamp | null;
    bu_id: string | null;
    emission_kg: number | null;
    emission_tn: number | null;
    gwp: number | null;
    emission_co2e_kg: number | null;
    emission_co2e_tn: number | null;
};
export type v_stationary_combustion_energy_emission = {
    id: string;
    company_id: string | null;
    bu_id: string | null;
    bu_name: string | null;
    fuel_id: number | null;
    fuel_name: string | null;
    input_start_date: Timestamp | null;
    input_end_date: Timestamp | null;
    measurement_basis_name: string | null;
    fuel_density: number | null;
    fuel_calorific_value: number | null;
    emission_factor_location_id: string | null;
    emission_factor_location_name: string | null;
    emission_factor_co2: number | null;
    input_consumption: number | null;
    input_unit: string | null;
    consumption_converted_to_preferred_unit: number | null;
    converted_preferred_unit: string | null;
    consumption_kg: number | null;
    energy_consumption_kj: number | null;
    emissions_co2e_kg: number | null;
    emissions_co2e_tn: number | null;
};
export type v_stationary_combustion_energy_emission_without_submit = {
    id: string;
    company_id: string | null;
    bu_id: string | null;
    bu_name: string | null;
    fuel_id: number | null;
    fuel_name: string | null;
    input_start_date: Timestamp | null;
    input_end_date: Timestamp | null;
    measurement_basis_name: string | null;
    fuel_density: number | null;
    fuel_calorific_value: number | null;
    emission_factor_location_id: string | null;
    emission_factor_location_name: string | null;
    emission_factor_co2: number | null;
    input_consumption: number | null;
    input_unit: string | null;
    consumption_converted_to_preferred_unit: number | null;
    converted_preferred_unit: string | null;
    consumption_kg: number | null;
    energy_consumption_kj: number | null;
    emissions_co2e_kg: number | null;
    emissions_co2e_tn: number | null;
};
export type DB = {
    address: address;
    address_type: address_type;
    admin_steam_company_mapping: admin_steam_company_mapping;
    answer_layout: answer_layout;
    answer_layout_column: answer_layout_column;
    answer_layout_energy_consumption_energy_source_sequence_mapping: answer_layout_energy_consumption_energy_source_sequence_mapping;
    answer_layout_fugitive_emission_emission_types_sequence_mapping: answer_layout_fugitive_emission_emission_types_sequence_mapping;
    answer_layout_mobile_consumption_transportation_mode_sequence_m: answer_layout_mobile_consumption_transportation_mode_sequence_m;
    answer_layout_process_emission_emission_types_sequence_mapping: answer_layout_process_emission_emission_types_sequence_mapping;
    answer_layout_row: answer_layout_row;
    answer_layout_row_column_data_point_mapping: answer_layout_row_column_data_point_mapping;
    answer_layout_stationary_combustion_fuel_sequence_mapping: answer_layout_stationary_combustion_fuel_sequence_mapping;
    assesment_comment: assesment_comment;
    assessment: assessment;
    assessment_master: assessment_master;
    assessment_master_question_mapping: assessment_master_question_mapping;
    assessment_master_supplier_category_mapping: assessment_master_supplier_category_mapping;
    assessment_supplier_audit: assessment_supplier_audit;
    assessment_supplier_category_mapping: assessment_supplier_category_mapping;
    auth_key: AuthKey;
    auth_session: AuthSession;
    bu_user_mapping: bu_user_mapping;
    business_unit: business_unit;
    calendar_month: calendar_month;
    comment: comment;
    company: company;
    country: country;
    currency: currency;
    customer_auditor: customer_auditor;
    customer_company: customer_company;
    customer_material_topic: customer_material_topic;
    customer_supplier: customer_supplier;
    customer_supplier_category_mapping: customer_supplier_category_mapping;
    customer_supplier_setting: customer_supplier_setting;
    data_hub: data_hub;
    data_point: data_point;
    data_point_measurement_basis_mapping: data_point_measurement_basis_mapping;
    data_point_option: data_point_option;
    data_point_option_mapping: data_point_option_mapping;
    date_time_format: date_time_format;
    emission_energy_fuel_source_aggregate: emission_energy_fuel_source_aggregate;
    emission_energy_supplier_category_aggregate: emission_energy_supplier_category_aggregate;
    emission_types: emission_types;
    energy_consumption: energy_consumption;
    energy_consumption_audit: energy_consumption_audit;
    energy_emission_factor: energy_emission_factor;
    energy_source: energy_source;
    esg_aggregated_indicator: esg_aggregated_indicator;
    esg_indicator_list: esg_indicator_list;
    event_notification: event_notification;
    event_user_mapping: event_user_mapping;
    financial_year_cycle: financial_year_cycle;
    fuel: fuel;
    fugitive_emission: fugitive_emission;
    fugitive_emission_audit: fugitive_emission_audit;
    industry: industry;
    industry_material_topic: industry_material_topic;
    job_details: job_details;
    job_execution_log: job_execution_log;
    location: location;
    material_topic: material_topic;
    material_topic_es_indicator_list_mapping: material_topic_es_indicator_list_mapping;
    measurement_basis: measurement_basis;
    measurement_conversion: measurement_conversion;
    measurement_unit: measurement_unit;
    mobile_consumption: mobile_consumption;
    mobile_consumption_audit: mobile_consumption_audit;
    phone_country_code: phone_country_code;
    process_emission: process_emission;
    process_emission_audit: process_emission_audit;
    questions: questions;
    report: report;
    report_comment: report_comment;
    report_material_topic: report_material_topic;
    report_question: report_question;
    report_question_business_unit_mapping: report_question_business_unit_mapping;
    report_question_comment_mapping: report_question_comment_mapping;
    report_question_frequency_mapping: report_question_frequency_mapping;
    report_question_user_mapping: report_question_user_mapping;
    reporting_framework: reporting_framework;
    reporting_framework_section: reporting_framework_section;
    reporting_framework_section_question_mapping: reporting_framework_section_question_mapping;
    reporting_period: reporting_period;
    reporting_sub_framework: reporting_sub_framework;
    reporting_year: reporting_year;
    reporting_year_month: reporting_year_month;
    seed_data_log: seed_data_log;
    staionary_combustion_consumption: staionary_combustion_consumption;
    staionary_combustion_consumption_audit: staionary_combustion_consumption_audit;
    stationary_combustion_emission_factor: stationary_combustion_emission_factor;
    supp_material_topic_esg_indicator_list_mapping: supp_material_topic_esg_indicator_list_mapping;
    supplier_asssessment: supplier_asssessment;
    supplier_asssessment_mapping: supplier_asssessment_mapping;
    supplier_category: supplier_category;
    supplier_company: supplier_company;
    supporting_evidence: supporting_evidence;
    transportation_fuel_type: transportation_fuel_type;
    transportation_mode: transportation_mode;
    user: AuthUser;
    v_energy_emission_scope2: v_energy_emission_scope2;
    v_energy_emission_scope2_without_submit: v_energy_emission_scope2_without_submit;
    v_fugitive_emission: v_fugitive_emission;
    v_fugitive_emission_without_submit: v_fugitive_emission_without_submit;
    v_mobile_consumption_energy_emission: v_mobile_consumption_energy_emission;
    v_mobile_consumption_energy_emission_without_submit: v_mobile_consumption_energy_emission_without_submit;
    v_process_emission: v_process_emission;
    v_process_emission_without_submit: v_process_emission_without_submit;
    v_stationary_combustion_energy_emission: v_stationary_combustion_energy_emission;
    v_stationary_combustion_energy_emission_without_submit: v_stationary_combustion_energy_emission_without_submit;
};
